@use './value' as *;

@mixin fontHeight($fontSize) {
  font-size: $fontSize + rem;
  letter-spacing: -0.01rem;
  @if $fontSize == 3.2 {
    line-height: 4.4rem;
  } @else if $fontSize == 2.6 {
    line-height: 3.8rem;
  } @else if $fontSize == 2.0 {
    line-height: 3.2rem;
  } @else if $fontSize == 2 {
    line-height: 3.2rem;
  } @else if $fontSize == 1.8 {
    line-height: 2.8rem;
  } @else if $fontSize == 1.7 {
    line-height: 2.7rem;
  } @else if $fontSize == 1.6 {
    line-height: 2.6rem;
  } @else if $fontSize == 1.5 {
    line-height: 2.5rem;
  } @else if $fontSize == 1.4 {
    line-height: 2.2rem;
  } @else if $fontSize == 1.3 {
    line-height: 2.1rem;
  } @else if $fontSize == 1.2 {
    line-height: 2rem;
  }
}

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0); /* 구형 브라우저를 위해 사용 */
  clip-path: polygon(0 0, 0 0, 0 0); /* inset(50%) 와 동일한 표현 */
  border: 0;
}

@mixin ellipsis($lines: 1) {
  @if ($lines == 1) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  }
}

@mixin icon($iconSize, $iconName, $extention: 'png') {
  display: inline-flex;
  width: ($iconSize * 0.1)+rem;
  height: ($iconSize * 0.1)+rem;
  &::before {
    content: '';
    display: inline-block;
    width: ($iconSize * 0.1)+rem;
    height: ($iconSize * 0.1)+rem;
    background: url("#{$img-path}/icon/icon_#{$iconSize}_#{$iconName}.#{$extention}") no-repeat 0 0 / 100% auto;
  }
}

@mixin icon-bg($iconSize, $iconName, $extention: 'png') {
  background: url("#{$img-path}/icon/icon_#{$iconSize}_#{$iconName}.#{$extention}") no-repeat center center / (($iconSize * 0.1)+rem) auto;
}

// media query
@mixin mobile ($breakpoint-mobile, $breakpoint-tablet) {
  @media (min-width: #{$breakpoint-mobile}) and (max-width: #{$breakpoint-tablet - 1px}) {
    @content;
  }
}

@mixin tablet ($breakpoint-tablet, $breakpoint-desktop) {
  @media (min-width: #{$breakpoint-tablet}) and (max-width: #{$breakpoint-desktop - 1px}) {
    @content;
  }
}

@mixin desktop ($breakpoint-desktop) {
  @media (min-width: #{$breakpoint-desktop}) {
    @content;
  }
}